/* tslint:disable */
/* eslint-disable */


/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.1
 * $ pg-to-ts generate -c postgresql://username:password@localhost:5432/audio_archive_development -t accounts -t app_users -t cart_items -t carts -t customers -t events -t knex_migrations -t knex_migrations_lock -t order_items -t orders -t products -s public
 *
 */


export type Json = unknown;
export type cart_status_type = 'abandoned' | 'active' | 'archived' | 'purchased';
export type eventstatustype = 'failed' | 'pending' | 'processed' | 'processing';
export type genre = 'Bass House' | 'Breakbeat' | 'Breaks' | 'Deep House' | 'House' | 'Pop' | 'Techno' | 'Trap' | 'UK Bass' | 'dubstep';
export type key = 'A Major' | 'A Minor' | 'A♭ Major' | 'A♭ Minor' | 'B Major' | 'B Minor' | 'B♭ Major' | 'B♭ Minor' | 'C Major' | 'C Minor' | 'D Major' | 'D Minor' | 'D♭ Major' | 'D♭ Minor' | 'E Major' | 'E Minor' | 'E♭ Major' | 'E♭ Minor' | 'F Major' | 'F Minor' | 'F♯/G♭ Major' | 'F♯/G♭ Minor' | 'G Major' | 'G Minor';
export type software = 'Ableton' | 'FL_Studio' | 'Logic';

// Table accounts
export interface Accounts {
  id: number;
  app_user_id: number;
  stripe_account_id: string;
  charges_enabled: boolean | null;
  payouts_enabled: boolean | null;
  details_submitted: boolean | null;
  default_account: boolean | null;
  created_at: Date;
  updated_at: Date;
}
export interface AccountsInput {
  id?: number;
  app_user_id: number;
  stripe_account_id: string;
  charges_enabled?: boolean | null;
  payouts_enabled?: boolean | null;
  details_submitted?: boolean | null;
  default_account?: boolean | null;
  created_at?: Date;
  updated_at?: Date;
}
const accounts = {
  tableName: 'accounts',
  columns: ['id', 'app_user_id', 'stripe_account_id', 'charges_enabled', 'payouts_enabled', 'details_submitted', 'default_account', 'created_at', 'updated_at'],
  requiredForInsert: ['app_user_id', 'stripe_account_id'],
  primaryKey: 'id',
  foreignKeys: { app_user_id: { table: 'app_users', column: 'id', $type: null as unknown as AppUsers }, },
  $type: null as unknown as Accounts,
  $input: null as unknown as AccountsInput
} as const;

// Table app_users
export interface AppUsers {
  id: number;
  auth_id: string;
  first_name: string;
  last_name: string;
  username: string | null;
  email: string | null;
  avatar_s3_key: string | null;
  avatar_s3_url: string | null;
  created_at: Date | null;
  updated_at: Date | null;
}
export interface AppUsersInput {
  id?: number;
  auth_id: string;
  first_name: string;
  last_name: string;
  username?: string | null;
  email?: string | null;
  avatar_s3_key?: string | null;
  avatar_s3_url?: string | null;
  created_at?: Date | null;
  updated_at?: Date | null;
}
const app_users = {
  tableName: 'app_users',
  columns: ['id', 'auth_id', 'first_name', 'last_name', 'username', 'email', 'avatar_s3_key', 'avatar_s3_url', 'created_at', 'updated_at'],
  requiredForInsert: ['auth_id', 'first_name', 'last_name'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as AppUsers,
  $input: null as unknown as AppUsersInput
} as const;

// Table cart_items
export interface CartItems {
  id: number;
  cart_id: number;
  product_id: number;
  created_at: Date;
  updated_at: Date;
}
export interface CartItemsInput {
  id?: number;
  cart_id: number;
  product_id: number;
  created_at?: Date;
  updated_at?: Date;
}
const cart_items = {
  tableName: 'cart_items',
  columns: ['id', 'cart_id', 'product_id', 'created_at', 'updated_at'],
  requiredForInsert: ['cart_id', 'product_id'],
  primaryKey: 'id',
  foreignKeys: {
    cart_id: { table: 'carts', column: 'id', $type: null as unknown as Carts },
    product_id: { table: 'products', column: 'id', $type: null as unknown as Products },
  },
  $type: null as unknown as CartItems,
  $input: null as unknown as CartItemsInput
} as const;

// Table carts
export interface Carts {
  id: number;
  app_user_id: number;
  status: cart_status_type;
  created_at: Date;
  updated_at: Date;
}
export interface CartsInput {
  id?: number;
  app_user_id: number;
  status?: cart_status_type;
  created_at?: Date;
  updated_at?: Date;
}
const carts = {
  tableName: 'carts',
  columns: ['id', 'app_user_id', 'status', 'created_at', 'updated_at'],
  requiredForInsert: ['app_user_id'],
  primaryKey: 'id',
  foreignKeys: { app_user_id: { table: 'app_users', column: 'id', $type: null as unknown as AppUsers }, },
  $type: null as unknown as Carts,
  $input: null as unknown as CartsInput
} as const;

// Table customers
export interface Customers {
  id: number;
  app_user_id: number;
  stripe_customer_id: string | null;
  created_at: Date | null;
  updated_at: Date | null;
}
export interface CustomersInput {
  id?: number;
  app_user_id: number;
  stripe_customer_id?: string | null;
  created_at?: Date | null;
  updated_at?: Date | null;
}
const customers = {
  tableName: 'customers',
  columns: ['id', 'app_user_id', 'stripe_customer_id', 'created_at', 'updated_at'],
  requiredForInsert: ['app_user_id'],
  primaryKey: 'id',
  foreignKeys: { app_user_id: { table: 'app_users', column: 'id', $type: null as unknown as AppUsers }, },
  $type: null as unknown as Customers,
  $input: null as unknown as CustomersInput
} as const;

// Table events
export interface Events {
  id: number;
  data: Json | null;
  source: string | null;
  type: string | null;
  processing_errors: string | null;
  status: eventstatustype;
  created_at: Date;
  updated_at: Date;
}
export interface EventsInput {
  id?: number;
  data?: Json | null;
  source?: string | null;
  type?: string | null;
  processing_errors?: string | null;
  status: eventstatustype;
  created_at?: Date;
  updated_at?: Date;
}
const events = {
  tableName: 'events',
  columns: ['id', 'data', 'source', 'type', 'processing_errors', 'status', 'created_at', 'updated_at'],
  requiredForInsert: ['status'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Events,
  $input: null as unknown as EventsInput
} as const;

// Table knex_migrations
export interface KnexMigrations {
  id: number;
  name: string | null;
  batch: number | null;
  migration_time: Date | null;
}
export interface KnexMigrationsInput {
  id?: number;
  name?: string | null;
  batch?: number | null;
  migration_time?: Date | null;
}
const knex_migrations = {
  tableName: 'knex_migrations',
  columns: ['id', 'name', 'batch', 'migration_time'],
  requiredForInsert: [],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as KnexMigrations,
  $input: null as unknown as KnexMigrationsInput
} as const;

// Table knex_migrations_lock
export interface KnexMigrationsLock {
  index: number;
  is_locked: number | null;
}
export interface KnexMigrationsLockInput {
  index?: number;
  is_locked?: number | null;
}
const knex_migrations_lock = {
  tableName: 'knex_migrations_lock',
  columns: ['index', 'is_locked'],
  requiredForInsert: [],
  primaryKey: 'index',
  foreignKeys: {},
  $type: null as unknown as KnexMigrationsLock,
  $input: null as unknown as KnexMigrationsLockInput
} as const;

// Table order_items
export interface OrderItems {
  id: number;
  order_id: number;
  product_id: number;
  created_at: Date;
  updated_at: Date;
}
export interface OrderItemsInput {
  id?: number;
  order_id: number;
  product_id: number;
  created_at?: Date;
  updated_at?: Date;
}
const order_items = {
  tableName: 'order_items',
  columns: ['id', 'order_id', 'product_id', 'created_at', 'updated_at'],
  requiredForInsert: ['order_id', 'product_id'],
  primaryKey: 'id',
  foreignKeys: {
    order_id: { table: 'orders', column: 'id', $type: null as unknown as Orders },
    product_id: { table: 'products', column: 'id', $type: null as unknown as Products },
  },
  $type: null as unknown as OrderItems,
  $input: null as unknown as OrderItemsInput
} as const;

// Table orders
export interface Orders {
  id: number;
  app_user_id: number;
  stripe_payment_intent_id: string | null;
  payment_status: string;
  stripe_checkout_session_id: string | null;
  created_at: Date;
  updated_at: Date;
}
export interface OrdersInput {
  id?: number;
  app_user_id: number;
  stripe_payment_intent_id?: string | null;
  payment_status?: string;
  stripe_checkout_session_id?: string | null;
  created_at?: Date;
  updated_at?: Date;
}
const orders = {
  tableName: 'orders',
  columns: ['id', 'app_user_id', 'stripe_payment_intent_id', 'payment_status', 'stripe_checkout_session_id', 'created_at', 'updated_at'],
  requiredForInsert: ['app_user_id'],
  primaryKey: 'id',
  foreignKeys: { app_user_id: { table: 'app_users', column: 'id', $type: null as unknown as AppUsers }, },
  $type: null as unknown as Orders,
  $input: null as unknown as OrdersInput
} as const;

// Table products
export interface Products {
  id: number;
  app_user_id: number;
  account_id: number;
  name: string;
  genre: genre;
  software: software;
  bpm: number;
  price: number;
  img_s3_key: string | null;
  img_s3_url: string | null;
  digital_file_s3_key: string | null;
  digital_file_s3_url: string | null;
  key: string | null;
  label: string | null;
  description: string | null;
  stripe_product_id: string | null;
  created_at: Date;
  updated_at: Date;
}
export interface ProductsInput {
  id?: number;
  app_user_id: number;
  account_id: number;
  name: string;
  genre: genre;
  software: software;
  bpm: number;
  price: number;
  img_s3_key?: string | null;
  img_s3_url?: string | null;
  digital_file_s3_key?: string | null;
  digital_file_s3_url?: string | null;
  key?: string | null;
  label?: string | null;
  description?: string | null;
  stripe_product_id?: string | null;
  created_at?: Date;
  updated_at?: Date;
}
const products = {
  tableName: 'products',
  columns: ['id', 'app_user_id', 'account_id', 'name', 'genre', 'software', 'bpm', 'price', 'img_s3_key', 'img_s3_url', 'digital_file_s3_key', 'digital_file_s3_url', 'key', 'label', 'description', 'stripe_product_id', 'created_at', 'updated_at'],
  requiredForInsert: ['app_user_id', 'account_id', 'name', 'genre', 'software', 'bpm', 'price'],
  primaryKey: 'id',
  foreignKeys: {
    app_user_id: { table: 'app_users', column: 'id', $type: null as unknown as AppUsers },
    account_id: { table: 'accounts', column: 'id', $type: null as unknown as Accounts },
  },
  $type: null as unknown as Products,
  $input: null as unknown as ProductsInput
} as const;


export interface TableTypes {
  accounts: {
    select: Accounts;
    input: AccountsInput;
  };
  app_users: {
    select: AppUsers;
    input: AppUsersInput;
  };
  cart_items: {
    select: CartItems;
    input: CartItemsInput;
  };
  carts: {
    select: Carts;
    input: CartsInput;
  };
  customers: {
    select: Customers;
    input: CustomersInput;
  };
  events: {
    select: Events;
    input: EventsInput;
  };
  knex_migrations: {
    select: KnexMigrations;
    input: KnexMigrationsInput;
  };
  knex_migrations_lock: {
    select: KnexMigrationsLock;
    input: KnexMigrationsLockInput;
  };
  order_items: {
    select: OrderItems;
    input: OrderItemsInput;
  };
  orders: {
    select: Orders;
    input: OrdersInput;
  };
  products: {
    select: Products;
    input: ProductsInput;
  };
}

export const tables = {
  accounts,
  app_users,
  cart_items,
  carts,
  customers,
  events,
  knex_migrations,
  knex_migrations_lock,
  order_items,
  orders,
  products,
}
